<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.myblog.mapper.SnapshotMapperCust" >

    <!--
    # 方案一（ID不连续）：
    #   删除今天的数据
    #   为所有的电子书生成一条今天的记录
    #   更新总阅读数、总点赞数
    #   更新今日阅读数、今日点赞数
    # 方案二（ID连续）：
    #   为所有的电子书生成一条今天的记录，如果还没有
    #   更新总阅读数、总点赞数
    #   更新今日阅读数、今日点赞数
    -->
    <update id="genSnapshot">
        insert into t_snapshot(ebook_id, `date`, view_count, vote_count, view_increase, vote_increase)
        select t1.id, curdate(), 0, 0, 0, 0
        from t_ebook t1
        where not EXISTS(select 1 from t_snapshot t2 where t1.id = t2.ebook_id and t2.`date` = CURDATE());

        update t_snapshot t1, t_ebook t2
        set t1.view_count = t2.view_count, t1.vote_count = t2.vote_count
        where t1.`date` = curdate() and t1.ebook_id = t2.id;

        update t_snapshot t1 LEFT JOIN (select ebook_id, view_count, vote_count from t_snapshot
            where `date` = DATE_SUB(CURDATE(), INTERVAL 1 DAY)) t2
        on t1.ebook_id = t2.ebook_id
            set t1.vote_increase = (t1.vote_count - IFNULL(t2.vote_count, 0)),
                t1.view_increase = (t1.view_count - IFNULL(t2.view_count, 0))
        where t1.`date` = CURDATE();
    </update>

    <!-- 获取首页数值数据：总阅读数、总点赞数、今日阅读数、今日点赞数、今日预计阅读数、今日预计阅读增长 -->
    <select id="getStatistic" resultType="com.blog.myblog.response.SnapshotResponse">
        select
            t1.`date` as `date`,
            sum(t1.vote_count) as 'VoteCount',
            sum(t1.view_count) as 'ViewCount',
            SUM(t1.vote_increase) as 'VoteIncrease',
            SUM(t1.view_increase) as 'ViewIncrease'
        from t_snapshot t1
        where t1.`date` >= DATE_SUB(CURDATE(), INTERVAL 1 DAY)
        GROUP BY t1.`date`
        ORDER BY t1.`date` ASC;
    </select>
    <!-- 获取连续30日的数据 -->
    <select id="get30Statistic" resultType="com.blog.myblog.response.SnapshotResponse">
        select
            t1.`date` as `date`,
            SUM(t1.vote_increase) as 'VoteIncrease',
            SUM(t1.view_increase) as 'ViewIncrease'
        from t_snapshot t1
        where t1.`date` between DATE_SUB(CURDATE(), INTERVAL 30 DAY) and DATE_SUB(CURDATE(), INTERVAL 1 DAY)
        GROUP BY t1.`date`
        ORDER BY t1.`date` ASC;
    </select>

</mapper>